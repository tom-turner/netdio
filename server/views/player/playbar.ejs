<div id='outer' class="flex items-center justify-center blue flex flex-col p-4 space-y-2 w-full max-h-screen">


	<div id="container" class="flex h-screen w-full bg-white rounded-md border shadow-lg p-2 px-4 overflow-auto">	

		<img id="artwork" src="" class="flex object-contain cursor-pointer flex-grow p-2"/>

		<span id='info' class="flex flex-col mx-auto flex-grow justify-evenly space-y-4 relative w-full my-auto">


			<span id="trackData" class="mx-auto flex flex-col text-center cursor-pointer overflow-hidden">
				<p id="songtitle" class="text-gray-800 px-2 my-auto overflow-hidden"></p>
				<p id="artist" class="text-gray-400 px-2 my-auto"></p>
			</span>
			
			<span id="transport" class="hidden flex flex-row space-x-2 mx-auto my-auto items-center">	
				<svg id="last" class="h-9 w-9 cursor-pointer fill-current blue-fill  my-auto mx-auto" >
					<use xlink:href="images/player/last.svg#last"/>
				</svg>
				<svg id="play" class="h-12 w-12 cursor-pointer fill-current blue-fill" >
					<use xlink:href="images/player/play.svg#playbtn"/>
				</svg>
				<svg id="pause" class="h-12 w-12 cursor-pointer fill-current blue-fill hidden" >
					<use xlink:href="images/player/pause.svg#pause"/>
				</svg>
				<svg id="next" class="h-9 w-9 my-auto cursor-pointer fill-current blue-fill mx-auto" >
					<use xlink:href="images/player/next.svg#next"/>
				</svg>
			</span>

		</span>

	</div>

</div>

<script type="text/javascript">
	 	
	 	var socket = io()
	 	let player = {}	
	 
	 	let forward = (ctrl) => {
	 		var message = {
	 			ip : player.ip,
	 			type : 'playerctrl', 
	 			value : ctrl,
	 		}
	 		socket.emit('forward', message)
	 	}

		let ratio = () => {
			return $("#container").width() / $("#container").height()
		}

		let setTrackData = (data) => {
			$("#songtitle").text(data.title)
			$("#artist").text(data.artist)
			$("#artwork").attr('src', data.image)
			if (!data.title) {
				$("#services").removeClass('hidden')
				$("#container").addClass('hidden')
			}
		}

		let responsiveLayout = () => {

			if(ratio() > 3){
				$("#progressBar").addClass('hidden')
				$("#info").addClass('flex-row')
				$("#info").removeClass('flex-col')
				$("#info").removeClass('h-screen')
				$("#info").addClass('text-left')
				$("#container").removeClass('w-full')
				$("#trackData").removeClass('text-center')
				$("#trackData").addClass('text-left')
				$("#outer").removeClass('p-4')
				$("#outer").removeClass('blue')
				$("#service").addClass('hidden')
				$("#artwork").removeClass('object-contain')
				$("#artwork").addClass('object-cover')
			}
		}
		socket.on("devices", (devices) => {
			for (device of devices) {
				if (device.player) {
					player = device.player
					player.ip = device.device.ip
				}
			}
		})


		socket.on("trackData", (track) => {
			console.log(track)
			setTrackData(track) 
		})

		window.onresize = responsiveLayout
		$(window).trigger('resize')

		$('#play').on('click', () =>{
			forward({transport :'play'})
		})
		$('#pause').on('click', () =>{
			forward({transport :'pause'})
		})
		$('#last').on('click', () =>{
			forward({transport :'last'})
		})
		$('#next').on('click', () =>{
			forward({ transport :'next'})
		})
		$('#service').on('change', () =>{
			forward({ service : $('#service').val()})
		})

		$('#artwork').on('click', () =>{
			if (location.pathname == '/player') {
				location.href = '/'
			}	else {
				location.href = '/player'
			}
			
		})
		$('#trackData').on('click', () =>{
			if (location.pathname == '/player') {
				location.href = '/'
			}	else {
				location.href = '/player'
			}
		})



</script>