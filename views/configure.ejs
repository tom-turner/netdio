
<div class="hidden h-screen w-full bg-black opacity-80 absolute spinner text-white">

		<span class="flex flex-col space-y-4">

			<p class="text-center mt-10"> Configuration received</p>

			<svg class="w-10 mx-auto animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
				<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
				<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
			</svg>

		</span>

</div>

<div class="flex items-center justify-center h-screen bg-blue-800 bg-opacity-30">

<div class="flex rounded shadow-lg flex-col p-4 bg-white">

<h2 class="text-center text-lg font-bold">Receiver Configuration</h2>
<br>

<label>Receive Source:</label>
<select name="source" id="source" type="number" class="border rounded">
  <option value="10001">1</option>
  <option value="10002">2</option>
  <option value="10003">3</option>
  <option value="10004">4</option>
  <option value="10005">5</option>
  <option value="10006">6</option>
  <option value="10007">7</option>
  <option value="10008">8</option>
  <option value="10009">9</option>
  <option value="100010">10</option>
  <option value="100011">11</option>
  <option value="100012">12</option>
  <option value="100013">13</option>
  <option value="100014">14</option>
  <option value="100015">15</option>
  <option value="100016">16</option>
  <option value="100017">17</option>
  <option value="100018">18</option>
  <option value="100019">19</option>
  <option value="100020">20</option>
</select>

<br>

<label>Volume:</label>
<input id="volume" type="range">

<br>


<span class="flex flex-col space-y-2">
<label>IP Address:</label>
<input id="ipAddress" class="border rounded" type="text">
<button id="configure" class="button border px-2 rounded text-white bg-blue-600">Configure</button>
<button id="restart" class="button border px-2 rounded text-grey-400 bg-white">Restart</button>
</span>
<div>
</div>

<script type="text/javascript">

	var socket = io();

	socket.on("config", (config) => {	
		loading(false)
		console.log("config: ", config)
		document.getElementById("ipAddress").value = config.ipAddress;
		document.getElementById("volume").value = config.volume;
		document.getElementById("source").value = config.sourcePort;
	});

	socket.on("newConfig", (config) => {
		loading(false)
		console.log("new config: " , config.ipAddress)
		loading(true)
		setTimeout(function(){
			window.location.href = "http://" + config.ipAddress + ":5000"
		}, 2000);
	})
	

	function loading(isLoading) {
		if (isLoading) {
			document.querySelector(".button").disabled = true;
			document.querySelector(".spinner").classList.remove("hidden");

		} else {
			document.querySelector(".button").disabled = false;
			document.querySelector(".spinner").classList.add("hidden");
		}
	}
	
	function volume(input) {
		console.log(input)
		socket.emit("volume", input)
	}

	function source(input) {
		console.log(input)
		socket.emit("source", input)
	}

	function configureIp(input) {
		loading(true)
		console.log(input)
		socket.emit("ip", input)
	}


	$('#volume').on("input" , function() {
		volume(document.getElementById("volume").value)
	})

	$('#source').on("input" , function() {
		source(document.getElementById("source").value)
	})

	$('#configure').on("click" , function() {
		configureIp(document.getElementById("ipAddress").value)
	})

	$('#restart').on("click" , function() {
		socket.emit("restart")
		loading(true)
	})

</script>