
<div class="hidden h-screen w-full bg-black opacity-80 absolute spinner text-white z-10">

	<span class="flex flex-col space-y-4">

		<p class="text-center mt-10"> Configuration received</p>

		<svg class="w-10 mx-auto animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
			<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
			<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
		</svg>

	</span>

</div>


<div class="flex items-center justify-center h-screen bg-blue-100 flex flex-col p-4 space-y-2">

<div class="w-full bg-white rounded shadow-lg flex  p-2 px-4 flex-col">
	<div class="justify-between flex w-full">
		<p>Settings:</p>
		<img id="settings-gear" class="w-6 cursor-pointer transform duration-500" onclick="toggleSettings('settings','settings-gear')" src="images/gear.svg"/>
	</div>

</div>
	<div id="settings" class="w-full bg-white rounded shadow-lg flex  p-2 px-4 flex-col hidden">
		<span class="flex flex-col space-y-2">

			<span class="flex flex-row space-x-2">
				<label>Name:</label>
				<input id="unitName" class="font-bold w-full" type="text">
			</span>	
				
				<span class="flex flex-row w-full space-x-2">
					
					<p>DHCP:</p>
					
					<div id="dhcp" class="relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in">
    					<input id="toggle" type="checkbox" name="toggle" class="absolute block w-6 h-6 rounded-full bg-white border-2 appearance-none cursor-pointer transform transition duration-500 translate-x-4"/>
    					<span id="toggle-bg" class="toggle-label block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer transition duration-500 blue"></span>
					</div>

				</span>

				<form id="staticForm" class="hidden w-full">
					<input id="static" type="checkbox" hidden>
					<span class="flex flex-row space-x-2">
						<label>IP Address:</label>
						<input id="ipAddress" type="text" name="ip">
					</span>
					<span class="flex flex-row space-x-2 hidden">
						<label>Subnet: </label>
						<input id="subnet" type="text" name="subnet">
					</span>

					<span class="flex flex-row space-x-2 hidden">
						<label>Router: </label>
						<input id="router" type="text" name="router">
					</span>
				</form>
			
			<button id="configure" class="button border px-2 rounded-full text-white blue">Configure</button>
			
			<button id="restart" class="button border px-2 rounded-full text-grey-400 bg-white">Restart</button>
		</span>
	</div>



<div class="w-full bg-white rounded shadow-lg flex  p-2 px-4 flex-col">
	<div class="justify-between flex w-full">
		<p>Devices:</p>
		<img id="routing-gear" class="w-6 cursor-pointer transform duration-500" onclick="toggleSettings('routing','routing-gear')" src="images/menu.svg"/>
	</div>
</div>
	<div id="routing" class="flex flex-row h-screen justify-between w-full space-x-2 hidden">

		<div class="flex rounded shadow-lg flex-col p-4 bg-white w-1/2">
			<h2 class="">Inputs: </h2>
			<ul id="inputs" class="h-full">

			</ul>
			
		</div>


		<div class="flex rounded shadow-lg flex-col p-4 bg-white w-1/2">
			<h2 class="">Destinations: </h2>
			<ul id="destinations" class="h-full">

			</ul>
		</div>

	</div>

	<div id="zone" class="flex flex-col h-screen w-full bg-white rounded shadow-lg p-2 px-4">
		<div class="justify-between flex w-full">
			<p>Zone Control:</p>
			<img id="reload" class="w-6 cursor-pointer" src="images/reload.svg"/>
		</div>

		<div class="h-full py-2">
			<ol id="zones" class="h-full flex flex-col">

			</ol>
		</div>
	</div>

</div>

<script type="text/javascript">

	var socket = io();

	function loading(isLoading) {
		if (isLoading) {
			document.querySelector(".button").disabled = true;
			document.querySelector(".spinner").classList.remove("hidden");

		} else {
			document.querySelector(".button").disabled = false;
			document.querySelector(".spinner").classList.add("hidden");
		}
	}

	function toggleSettings(id, button) {
		document.getElementById(id).classList.toggle("hidden")
		document.getElementById(button).classList.toggle("rotate-45")
		
		setTimeout( () => {
			document.getElementById(button).classList.toggle("rotate-45")
		},100)
	}

	function createZone(zone) {
		
		console.log(zone)

		return	$(`<li id="${zone.ip}" class="bg-white shadow-lg border rounded flex flex-col p-2 m-2" />`).append(
            		$('<div class="flex flex-col space-y-2"/>').append(
              			$('<div class"w-full flex flex-row justify-between"/>').append(
              				$('<span class="font-bold" />').text(zone.name)
              			),
              			$(`<input type="range" class="w-full rounded-lg overflow-hidden appearance-none bg-blue-100 rounded-full" value="${zone.volume}" oninput="edit('volume', this)"/>`),
              			$(`<select class="rounded zoneinput" onchange="edit('source', this)"/>`) .append($('<option id="muted" value="muted"/>').text("-Mute-"))
            		)
        		)
	}

	function getInputAsOption(device){
			
		return $(`<option value="${device.source}"/>`).text(device.name)
	}

	function createDeviceLi(device) {

		console.log(device)

		return	$('<li id="'+ device.ip + '" class="bg-white shadow-lg border rounded flex flex-row p-2 my-2 md:space-x-2 justify-between"/>').append(
					$('<div class="flex flex-row space-x-2"/>').append(
						$('<label />').text("Name: "),
						$(`<input type="text" class="w-full font-bold" value="${device.name}" onkeyup="edit('name', this)"/>`)
					),
					$('<div class="flex flex-row space-x-2 hidden"/>').append(
						$('<lable/>').text("IP: "),
						$(`<p type="text" class="w-full"/>`).text(device.ip)
					),
					$(`<button class="text-white rounded-full px-2 blue" value="true" onclick="edit('blink' , this)" />`).text("Blink")
				)
	}


	function edit(type, input){
		
		message = {
			ip : input.closest('li').id,
			type : type, 
			value : input.value 
		}
		console.log(message)
		socket.emit('forward', message)
	}



	// listens for devices
	socket.on("devices", (devices) => {

		$('#zones').html('')
		$('#destinations').html('')
		$('#inputs').html('')

		devices = devices.sort((a,b) => {		
			return a.type == b.type ? 0 : a.type > b.type ? 1 : -1
		})

		for (device of devices) {

			if(device.type === 'rx') {

				var zone = createZone(device)
				$('#zones').append(zone)

				var li = createDeviceLi(device)
				$('#destinations').append(li)

				$('.zoneinput').append($('<option disabled selected/>').text(`${device.source}`))
			}
			if(device.type === 'tx') {
				
				$('.zoneinput').append(getInputAsOption(device))

				var li = createDeviceLi(device)
				$('#inputs').append(li)


			}
		}
	})
	
		// receives config on page load
	socket.on("config", (config) => {	
		loading(false)
		console.log("config: ", config)
		document.getElementById("ipAddress").value = config.ip;
		document.getElementById("unitName").value = config.name;
	});

	// listens for new config
	socket.on("newConfig", (config) => {
		loading(true)
		setTimeout(function(){
			window.location.href = "http://" + config.ip + ":5000"
		}, 2000);
	})

	$('#reload').on('click' , function(){
		loading(true)
		setTimeout( () => {
			location.reload()
		}, 1000)
	})

	$('#dhcp').on("click" , function(){
		$('#toggle').toggleClass("translate-x-4")
		$('#toggle-bg').toggleClass("blue")
		$('#staticForm').toggleClass("hidden")
	})

	$('#configure').on("click" , function() {
		loading(true)
		var config = {
			name : document.getElementById("unitName").value,
			ip : document.getElementById("ipAddress").value
		}
		socket.emit("config", config)
	})

	$('#restart').on("click" , function() {
		socket.emit("restart")
		loading(true)
	})

</script>